{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryana\\\\csc307\\\\CSC307-Receipt-App\\\\packages\\\\frontend\\\\src\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './CSS Files/ImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const fileInputRef = useRef(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleFileUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const token = localStorage.getItem('token');\n      console.log(token);\n      await fetch('http://localhost:8000/upload', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const userConfirmed = window.confirm('File uploaded successfully. Do you want to process this data?');\n      if (userConfirmed) {\n        const token = localStorage.getItem('token');\n        const requestOptions = {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${token}` // Include the token in the Authorization header\n          }\n        };\n\n        fetch('http://localhost:8000/process', requestOptions).then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n          return response.json();\n        }).then(data => {\n          console.log('File uploaded successfully:', data);\n        }).catch(error => {\n          console.error('Error uploading file:', error.message);\n        });\n      }\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n    console.log('File uploaded successfully');\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const droppedFile = e.dataTransfer.files[0];\n    setFile(droppedFile);\n  };\n  const handleDropZoneClick = () => {\n    fileInputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-zone\",\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      onClick: handleDropZoneClick,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag & Drop a file here or click to select a file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        style: {\n          display: 'none'\n        },\n        ref: fileInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected File: \", file.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'upload',\n        onClick: handleFileUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 13\n  }, this);\n};\n_s(ImageUpload, \"kNILOh2iWJ4R/9q826rTQ3S5DBI=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","ImageUpload","_s","file","setFile","fileInputRef","handleFileChange","e","target","files","handleFileUpload","formData","FormData","append","token","localStorage","getItem","console","log","fetch","method","body","headers","userConfirmed","window","confirm","requestOptions","Authorization","then","response","ok","Error","status","json","data","catch","error","message","handleDragOver","preventDefault","handleDrop","droppedFile","dataTransfer","handleDropZoneClick","current","click","className","children","onDragOver","onDrop","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","style","display","ref","name","_c","$RefreshReg$"],"sources":["C:/Users/ryana/csc307/CSC307-Receipt-App/packages/frontend/src/ImageUpload.js"],"sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport './CSS Files/ImageUpload.css';\r\n\r\nconst ImageUpload = () => {\r\n        const [file, setFile] = useState(null);\r\n        const fileInputRef = useRef(null);\r\n\r\n        const handleFileChange = (e) => {\r\n            setFile(e.target.files[0]);\r\n        };\r\n\r\n        const handleFileUpload = async () => {\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                console.log(token);\r\n                await fetch('http://localhost:8000/upload', {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                });\r\n\r\n                const userConfirmed = window.confirm('File uploaded successfully. Do you want to process this data?');\r\n\r\n                if (userConfirmed) {\r\n                    const token = localStorage.getItem('token');\r\n\r\n                    const requestOptions = {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'multipart/form-data',\r\n                            Authorization: `Bearer ${token}`, // Include the token in the Authorization header\r\n                        },\r\n                    };\r\n\r\n                    fetch('http://localhost:8000/process', requestOptions)\r\n                        .then((response) => {\r\n                            if (!response.ok) {\r\n                                throw new Error(`HTTP error! Status: ${response.status}`);\r\n                            }\r\n                            return response.json();\r\n                        })\r\n                        .then((data) => {\r\n                            console.log('File uploaded successfully:', data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.error('Error uploading file:', error.message);\r\n                        });\r\n                }\r\n            } catch (error) {\r\n                console.error('Error uploading file:', error);\r\n            }\r\n                console.log('File uploaded successfully');\r\n        };\r\n\r\n        const handleDragOver = (e) => {\r\n            e.preventDefault();\r\n        };\r\n\r\n        const handleDrop = (e) => {\r\n            e.preventDefault();\r\n\r\n            const droppedFile = e.dataTransfer.files[0];\r\n            setFile(droppedFile);\r\n        };\r\n\r\n        const handleDropZoneClick = () => {\r\n            fileInputRef.current.click();\r\n        };\r\n\r\n        return (\r\n            <div className=\"file-upload-container\">\r\n                <div\r\n                    className=\"drop-zone\"\r\n                    onDragOver={handleDragOver}\r\n                    onDrop={handleDrop}\r\n                    onClick={handleDropZoneClick}\r\n                >\r\n                    <p>Drag & Drop a file here or click to select a file</p>\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={handleFileChange}\r\n                        style={{display: 'none'}}\r\n                        ref={fileInputRef}\r\n                    />\r\n                </div>\r\n                {file && (\r\n                    <div>\r\n                        <p>Selected File: {file.name}</p>\r\n                        <button className={'upload'} onClick={handleFileUpload}>Upload</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default ImageUpload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}